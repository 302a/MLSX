# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2019-01-16 02:26
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='bean_goods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bar_code', models.TextField(null=True)),
                ('coding', models.TextField(null=True)),
                ('maingoods_coding', models.TextField(null=True)),
                ('goodsname', models.TextField(null=True)),
                ('unit', models.TextField(null=True)),
                ('package', models.TextField(null=True)),
                ('goodsType', models.TextField(null=True)),
                ('goods_classify_code', models.TextField(null=True)),
                ('supplier', models.TextField(null=True)),
                ('expiration_date', models.TextField(null=True)),
                ('origin', models.TextField(null=True)),
                ('count_type', models.TextField(null=True)),
                ('goodsStatus', models.TextField(null=True)),
                ('cost', models.TextField(null=True)),
                ('retail_price', models.TextField(null=True)),
                ('vip_price', models.TextField(null=True)),
                ('send_price', models.TextField(null=True)),
                ('trade_price', models.TextField(null=True)),
                ('minimum_stock', models.TextField(null=True)),
                ('highest_stock', models.TextField(null=True)),
                ('initial_amount', models.TextField(null=True)),
                ('initial_count', models.TextField(null=True)),
                ('replenishment_logo', models.TextField(null=True)),
                ('replenishment_period', models.TextField(null=True)),
                ('minimum_replenishment_volume', models.TextField(null=True)),
                ('standard', models.TextField(null=True)),
                ('goodsMode', models.TextField(null=True)),
                ('brand', models.TextField(null=True)),
                ('remark', models.TextField(null=True)),
                ('goods_img', models.ImageField(null=True, upload_to='goods_img')),
                ('goods_desc', models.TextField(null=True)),
                ('goods_detail_img1', models.ImageField(null=True, upload_to='goods_detail_img1')),
                ('goods_detail_img2', models.ImageField(null=True, upload_to='goods_detail_img2')),
            ],
            options={
                'db_table': 'bean_goods',
            },
        ),
        migrations.CreateModel(
            name='cereals_goods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bar_code', models.TextField(null=True)),
                ('coding', models.TextField(null=True)),
                ('maingoods_coding', models.TextField(null=True)),
                ('goodsname', models.TextField(null=True)),
                ('unit', models.TextField(null=True)),
                ('package', models.TextField(null=True)),
                ('goodsType', models.TextField(null=True)),
                ('goods_classify_code', models.TextField(null=True)),
                ('supplier', models.TextField(null=True)),
                ('expiration_date', models.TextField(null=True)),
                ('origin', models.TextField(null=True)),
                ('count_type', models.TextField(null=True)),
                ('goodsStatus', models.TextField(null=True)),
                ('cost', models.TextField(null=True)),
                ('retail_price', models.TextField(null=True)),
                ('vip_price', models.TextField(null=True)),
                ('send_price', models.TextField(null=True)),
                ('trade_price', models.TextField(null=True)),
                ('minimum_stock', models.TextField(null=True)),
                ('highest_stock', models.TextField(null=True)),
                ('initial_amount', models.TextField(null=True)),
                ('initial_count', models.TextField(null=True)),
                ('replenishment_logo', models.TextField(null=True)),
                ('replenishment_period', models.TextField(null=True)),
                ('minimum_replenishment_volume', models.TextField(null=True)),
                ('standard', models.TextField(null=True)),
                ('goodsMode', models.TextField(null=True)),
                ('brand', models.TextField(null=True)),
                ('remark', models.TextField(null=True)),
                ('goods_img', models.ImageField(null=True, upload_to='goods_img')),
                ('goods_desc', models.TextField(null=True)),
                ('goods_detail_img1', models.ImageField(null=True, upload_to='goods_detail_img1')),
                ('goods_detail_img2', models.ImageField(null=True, upload_to='goods_detail_img2')),
            ],
            options={
                'db_table': 'cereals_goods',
            },
        ),
        migrations.CreateModel(
            name='dry_crigo_goods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bar_code', models.TextField(null=True)),
                ('coding', models.TextField(null=True)),
                ('maingoods_coding', models.TextField(null=True)),
                ('goodsname', models.TextField(null=True)),
                ('unit', models.TextField(null=True)),
                ('package', models.TextField(null=True)),
                ('goodsType', models.TextField(null=True)),
                ('goods_classify_code', models.TextField(null=True)),
                ('supplier', models.TextField(null=True)),
                ('expiration_date', models.TextField(null=True)),
                ('origin', models.TextField(null=True)),
                ('count_type', models.TextField(null=True)),
                ('goodsStatus', models.TextField(null=True)),
                ('cost', models.TextField(null=True)),
                ('retail_price', models.TextField(null=True)),
                ('vip_price', models.TextField(null=True)),
                ('send_price', models.TextField(null=True)),
                ('trade_price', models.TextField(null=True)),
                ('minimum_stock', models.TextField(null=True)),
                ('highest_stock', models.TextField(null=True)),
                ('initial_amount', models.TextField(null=True)),
                ('initial_count', models.TextField(null=True)),
                ('replenishment_logo', models.TextField(null=True)),
                ('replenishment_period', models.TextField(null=True)),
                ('minimum_replenishment_volume', models.TextField(null=True)),
                ('standard', models.TextField(null=True)),
                ('goodsMode', models.TextField(null=True)),
                ('brand', models.TextField(null=True)),
                ('remark', models.TextField(null=True)),
                ('goods_img', models.ImageField(null=True, upload_to='goods_img')),
                ('goods_desc', models.TextField(null=True)),
                ('goods_detail_img1', models.ImageField(null=True, upload_to='goods_detail_img1')),
                ('goods_detail_img2', models.ImageField(null=True, upload_to='goods_detail_img2')),
            ],
            options={
                'db_table': 'dry_crigo_goods',
            },
        ),
        migrations.CreateModel(
            name='dry_fruit_goods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bar_code', models.TextField(null=True)),
                ('coding', models.TextField(null=True)),
                ('maingoods_coding', models.TextField(null=True)),
                ('goodsname', models.TextField(null=True)),
                ('unit', models.TextField(null=True)),
                ('package', models.TextField(null=True)),
                ('goodsType', models.TextField(null=True)),
                ('goods_classify_code', models.TextField(null=True)),
                ('supplier', models.TextField(null=True)),
                ('expiration_date', models.TextField(null=True)),
                ('origin', models.TextField(null=True)),
                ('count_type', models.TextField(null=True)),
                ('goodsStatus', models.TextField(null=True)),
                ('cost', models.TextField(null=True)),
                ('retail_price', models.TextField(null=True)),
                ('vip_price', models.TextField(null=True)),
                ('send_price', models.TextField(null=True)),
                ('trade_price', models.TextField(null=True)),
                ('minimum_stock', models.TextField(null=True)),
                ('highest_stock', models.TextField(null=True)),
                ('initial_amount', models.TextField(null=True)),
                ('initial_count', models.TextField(null=True)),
                ('replenishment_logo', models.TextField(null=True)),
                ('replenishment_period', models.TextField(null=True)),
                ('minimum_replenishment_volume', models.TextField(null=True)),
                ('standard', models.TextField(null=True)),
                ('goodsMode', models.TextField(null=True)),
                ('brand', models.TextField(null=True)),
                ('remark', models.TextField(null=True)),
                ('goods_img', models.ImageField(null=True, upload_to='goods_img')),
                ('goods_desc', models.TextField(null=True)),
                ('goods_detail_img1', models.ImageField(null=True, upload_to='goods_detail_img1')),
                ('goods_detail_img2', models.ImageField(null=True, upload_to='goods_detail_img2')),
            ],
            options={
                'db_table': 'dry_fruit_goods',
            },
        ),
        migrations.CreateModel(
            name='food_goods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bar_code', models.TextField(null=True)),
                ('coding', models.TextField(null=True)),
                ('maingoods_coding', models.TextField(null=True)),
                ('goodsname', models.TextField(null=True)),
                ('unit', models.TextField(null=True)),
                ('package', models.TextField(null=True)),
                ('goodsType', models.TextField(null=True)),
                ('goods_classify_code', models.TextField(null=True)),
                ('supplier', models.TextField(null=True)),
                ('expiration_date', models.TextField(null=True)),
                ('origin', models.TextField(null=True)),
                ('count_type', models.TextField(null=True)),
                ('goodsStatus', models.TextField(null=True)),
                ('cost', models.TextField(null=True)),
                ('retail_price', models.TextField(null=True)),
                ('vip_price', models.TextField(null=True)),
                ('send_price', models.TextField(null=True)),
                ('trade_price', models.TextField(null=True)),
                ('minimum_stock', models.TextField(null=True)),
                ('highest_stock', models.TextField(null=True)),
                ('initial_amount', models.TextField(null=True)),
                ('initial_count', models.TextField(null=True)),
                ('replenishment_logo', models.TextField(null=True)),
                ('replenishment_period', models.TextField(null=True)),
                ('minimum_replenishment_volume', models.TextField(null=True)),
                ('standard', models.TextField(null=True)),
                ('goodsMode', models.TextField(null=True)),
                ('brand', models.TextField(null=True)),
                ('remark', models.TextField(null=True)),
                ('goods_img', models.ImageField(null=True, upload_to='goods_img')),
                ('goods_desc', models.TextField(null=True)),
                ('goods_detail_img1', models.ImageField(null=True, upload_to='goods_detail_img1')),
                ('goods_detail_img2', models.ImageField(null=True, upload_to='goods_detail_img2')),
            ],
            options={
                'db_table': 'food_goods',
            },
        ),
        migrations.CreateModel(
            name='fresh_goods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bar_code', models.TextField(null=True)),
                ('coding', models.TextField(null=True)),
                ('maingoods_coding', models.TextField(null=True)),
                ('goodsname', models.TextField(null=True)),
                ('unit', models.TextField(null=True)),
                ('package', models.TextField(null=True)),
                ('goodsType', models.TextField(null=True)),
                ('goods_classify_code', models.TextField(null=True)),
                ('supplier', models.TextField(null=True)),
                ('expiration_date', models.TextField(null=True)),
                ('origin', models.TextField(null=True)),
                ('count_type', models.TextField(null=True)),
                ('goodsStatus', models.TextField(null=True)),
                ('cost', models.TextField(null=True)),
                ('retail_price', models.TextField(null=True)),
                ('vip_price', models.TextField(null=True)),
                ('send_price', models.TextField(null=True)),
                ('trade_price', models.TextField(null=True)),
                ('minimum_stock', models.TextField(null=True)),
                ('highest_stock', models.TextField(null=True)),
                ('initial_amount', models.TextField(null=True)),
                ('initial_count', models.TextField(null=True)),
                ('replenishment_logo', models.TextField(null=True)),
                ('replenishment_period', models.TextField(null=True)),
                ('minimum_replenishment_volume', models.TextField(null=True)),
                ('standard', models.TextField(null=True)),
                ('goodsMode', models.TextField(null=True)),
                ('brand', models.TextField(null=True)),
                ('remark', models.TextField(null=True)),
                ('goods_img', models.ImageField(null=True, upload_to='goods_img')),
                ('goods_desc', models.TextField(null=True)),
                ('goods_detail_img1', models.ImageField(null=True, upload_to='goods_detail_img1')),
                ('goods_detail_img2', models.ImageField(null=True, upload_to='goods_detail_img2')),
            ],
            options={
                'db_table': 'fresh_goods',
            },
        ),
        migrations.CreateModel(
            name='frozen_balls_goods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bar_code', models.TextField(null=True)),
                ('coding', models.TextField(null=True)),
                ('maingoods_coding', models.TextField(null=True)),
                ('goodsname', models.TextField(null=True)),
                ('unit', models.TextField(null=True)),
                ('package', models.TextField(null=True)),
                ('goodsType', models.TextField(null=True)),
                ('goods_classify_code', models.TextField(null=True)),
                ('supplier', models.TextField(null=True)),
                ('expiration_date', models.TextField(null=True)),
                ('origin', models.TextField(null=True)),
                ('count_type', models.TextField(null=True)),
                ('goodsStatus', models.TextField(null=True)),
                ('cost', models.TextField(null=True)),
                ('retail_price', models.TextField(null=True)),
                ('vip_price', models.TextField(null=True)),
                ('send_price', models.TextField(null=True)),
                ('trade_price', models.TextField(null=True)),
                ('minimum_stock', models.TextField(null=True)),
                ('highest_stock', models.TextField(null=True)),
                ('initial_amount', models.TextField(null=True)),
                ('initial_count', models.TextField(null=True)),
                ('replenishment_logo', models.TextField(null=True)),
                ('replenishment_period', models.TextField(null=True)),
                ('minimum_replenishment_volume', models.TextField(null=True)),
                ('standard', models.TextField(null=True)),
                ('goodsMode', models.TextField(null=True)),
                ('brand', models.TextField(null=True)),
                ('remark', models.TextField(null=True)),
                ('goods_img', models.ImageField(null=True, upload_to='goods_img')),
                ('goods_desc', models.TextField(null=True)),
                ('goods_detail_img1', models.ImageField(null=True, upload_to='goods_detail_img1')),
                ('goods_detail_img2', models.ImageField(null=True, upload_to='goods_detail_img2')),
            ],
            options={
                'db_table': 'frozen_balls_goods',
            },
        ),
        migrations.CreateModel(
            name='fruit_goods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bar_code', models.TextField(null=True)),
                ('coding', models.TextField(null=True)),
                ('maingoods_coding', models.TextField(null=True)),
                ('goodsname', models.TextField(null=True)),
                ('unit', models.TextField(null=True)),
                ('package', models.TextField(null=True)),
                ('goodsType', models.TextField(null=True)),
                ('goods_classify_code', models.TextField(null=True)),
                ('supplier', models.TextField(null=True)),
                ('expiration_date', models.TextField(null=True)),
                ('origin', models.TextField(null=True)),
                ('count_type', models.TextField(null=True)),
                ('goodsStatus', models.TextField(null=True)),
                ('cost', models.TextField(null=True)),
                ('retail_price', models.TextField(null=True)),
                ('vip_price', models.TextField(null=True)),
                ('send_price', models.TextField(null=True)),
                ('trade_price', models.TextField(null=True)),
                ('minimum_stock', models.TextField(null=True)),
                ('highest_stock', models.TextField(null=True)),
                ('initial_amount', models.TextField(null=True)),
                ('initial_count', models.TextField(null=True)),
                ('replenishment_logo', models.TextField(null=True)),
                ('replenishment_period', models.TextField(null=True)),
                ('minimum_replenishment_volume', models.TextField(null=True)),
                ('standard', models.TextField(null=True)),
                ('goodsMode', models.TextField(null=True)),
                ('brand', models.TextField(null=True)),
                ('remark', models.TextField(null=True)),
                ('goods_img', models.ImageField(null=True, upload_to='goods_img')),
                ('goods_desc', models.TextField(null=True)),
                ('goods_detail_img1', models.ImageField(null=True, upload_to='goods_detail_img1')),
                ('goods_detail_img2', models.ImageField(null=True, upload_to='goods_detail_img2')),
            ],
            options={
                'db_table': 'fruit_goods',
            },
        ),
        migrations.CreateModel(
            name='meat_goods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bar_code', models.TextField(null=True)),
                ('coding', models.TextField(null=True)),
                ('maingoods_coding', models.TextField(null=True)),
                ('goodsname', models.TextField(null=True)),
                ('unit', models.TextField(null=True)),
                ('package', models.TextField(null=True)),
                ('goodsType', models.TextField(null=True)),
                ('goods_classify_code', models.TextField(null=True)),
                ('supplier', models.TextField(null=True)),
                ('expiration_date', models.TextField(null=True)),
                ('origin', models.TextField(null=True)),
                ('count_type', models.TextField(null=True)),
                ('goodsStatus', models.TextField(null=True)),
                ('cost', models.TextField(null=True)),
                ('retail_price', models.TextField(null=True)),
                ('vip_price', models.TextField(null=True)),
                ('send_price', models.TextField(null=True)),
                ('trade_price', models.TextField(null=True)),
                ('minimum_stock', models.TextField(null=True)),
                ('highest_stock', models.TextField(null=True)),
                ('initial_amount', models.TextField(null=True)),
                ('initial_count', models.TextField(null=True)),
                ('replenishment_logo', models.TextField(null=True)),
                ('replenishment_period', models.TextField(null=True)),
                ('minimum_replenishment_volume', models.TextField(null=True)),
                ('standard', models.TextField(null=True)),
                ('goodsMode', models.TextField(null=True)),
                ('brand', models.TextField(null=True)),
                ('remark', models.TextField(null=True)),
                ('goods_img', models.ImageField(null=True, upload_to='goods_img')),
                ('goods_desc', models.TextField(null=True)),
                ('goods_detail_img1', models.ImageField(null=True, upload_to='goods_detail_img1')),
                ('goods_detail_img2', models.ImageField(null=True, upload_to='goods_detail_img2')),
            ],
            options={
                'db_table': 'meat_goods',
            },
        ),
        migrations.CreateModel(
            name='nofood_goods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bar_code', models.TextField(null=True)),
                ('coding', models.TextField(null=True)),
                ('maingoods_coding', models.TextField(null=True)),
                ('goodsname', models.TextField(null=True)),
                ('unit', models.TextField(null=True)),
                ('package', models.TextField(null=True)),
                ('goodsType', models.TextField(null=True)),
                ('goods_classify_code', models.TextField(null=True)),
                ('supplier', models.TextField(null=True)),
                ('expiration_date', models.TextField(null=True)),
                ('origin', models.TextField(null=True)),
                ('count_type', models.TextField(null=True)),
                ('goodsStatus', models.TextField(null=True)),
                ('cost', models.TextField(null=True)),
                ('retail_price', models.TextField(null=True)),
                ('vip_price', models.TextField(null=True)),
                ('send_price', models.TextField(null=True)),
                ('trade_price', models.TextField(null=True)),
                ('minimum_stock', models.TextField(null=True)),
                ('highest_stock', models.TextField(null=True)),
                ('initial_amount', models.TextField(null=True)),
                ('initial_count', models.TextField(null=True)),
                ('replenishment_logo', models.TextField(null=True)),
                ('replenishment_period', models.TextField(null=True)),
                ('minimum_replenishment_volume', models.TextField(null=True)),
                ('standard', models.TextField(null=True)),
                ('goodsMode', models.TextField(null=True)),
                ('brand', models.TextField(null=True)),
                ('remark', models.TextField(null=True)),
                ('goods_img', models.ImageField(null=True, upload_to='goods_img')),
                ('goods_desc', models.TextField(null=True)),
                ('goods_detail_img1', models.ImageField(null=True, upload_to='goods_detail_img1')),
                ('goods_detail_img2', models.ImageField(null=True, upload_to='goods_detail_img2')),
            ],
            options={
                'db_table': 'nofood_goods',
            },
        ),
        migrations.CreateModel(
            name='out_window_goods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bar_code', models.TextField(null=True)),
                ('coding', models.TextField(null=True)),
                ('maingoods_coding', models.TextField(null=True)),
                ('goodsname', models.TextField(null=True)),
                ('unit', models.TextField(null=True)),
                ('package', models.TextField(null=True)),
                ('goodsType', models.TextField(null=True)),
                ('goods_classify_code', models.TextField(null=True)),
                ('supplier', models.TextField(null=True)),
                ('expiration_date', models.TextField(null=True)),
                ('origin', models.TextField(null=True)),
                ('count_type', models.TextField(null=True)),
                ('goodsStatus', models.TextField(null=True)),
                ('cost', models.TextField(null=True)),
                ('retail_price', models.TextField(null=True)),
                ('vip_price', models.TextField(null=True)),
                ('send_price', models.TextField(null=True)),
                ('trade_price', models.TextField(null=True)),
                ('minimum_stock', models.TextField(null=True)),
                ('highest_stock', models.TextField(null=True)),
                ('initial_amount', models.TextField(null=True)),
                ('initial_count', models.TextField(null=True)),
                ('replenishment_logo', models.TextField(null=True)),
                ('replenishment_period', models.TextField(null=True)),
                ('minimum_replenishment_volume', models.TextField(null=True)),
                ('standard', models.TextField(null=True)),
                ('goodsMode', models.TextField(null=True)),
                ('brand', models.TextField(null=True)),
                ('remark', models.TextField(null=True)),
                ('goods_img', models.ImageField(null=True, upload_to='goods_img')),
                ('goods_desc', models.TextField(null=True)),
                ('goods_detail_img1', models.ImageField(null=True, upload_to='goods_detail_img1')),
                ('goods_detail_img2', models.ImageField(null=True, upload_to='goods_detail_img2')),
            ],
            options={
                'db_table': 'out_window_goods',
            },
        ),
        migrations.CreateModel(
            name='scattered_said_goods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bar_code', models.TextField(null=True)),
                ('coding', models.TextField(null=True)),
                ('maingoods_coding', models.TextField(null=True)),
                ('goodsname', models.TextField(null=True)),
                ('unit', models.TextField(null=True)),
                ('package', models.TextField(null=True)),
                ('goodsType', models.TextField(null=True)),
                ('goods_classify_code', models.TextField(null=True)),
                ('supplier', models.TextField(null=True)),
                ('expiration_date', models.TextField(null=True)),
                ('origin', models.TextField(null=True)),
                ('count_type', models.TextField(null=True)),
                ('goodsStatus', models.TextField(null=True)),
                ('cost', models.TextField(null=True)),
                ('retail_price', models.TextField(null=True)),
                ('vip_price', models.TextField(null=True)),
                ('send_price', models.TextField(null=True)),
                ('trade_price', models.TextField(null=True)),
                ('minimum_stock', models.TextField(null=True)),
                ('highest_stock', models.TextField(null=True)),
                ('initial_amount', models.TextField(null=True)),
                ('initial_count', models.TextField(null=True)),
                ('replenishment_logo', models.TextField(null=True)),
                ('replenishment_period', models.TextField(null=True)),
                ('minimum_replenishment_volume', models.TextField(null=True)),
                ('standard', models.TextField(null=True)),
                ('goodsMode', models.TextField(null=True)),
                ('brand', models.TextField(null=True)),
                ('remark', models.TextField(null=True)),
                ('goods_img', models.ImageField(null=True, upload_to='goods_img')),
                ('goods_desc', models.TextField(null=True)),
                ('goods_detail_img1', models.ImageField(null=True, upload_to='goods_detail_img1')),
                ('goods_detail_img2', models.ImageField(null=True, upload_to='goods_detail_img2')),
            ],
            options={
                'db_table': 'scattered_said_goods',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('openid', models.TextField()),
                ('userType', models.TextField(default='普通用户')),
                ('vipid', models.TextField(null=True)),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='vegetable_goods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bar_code', models.TextField(null=True)),
                ('coding', models.TextField(null=True)),
                ('maingoods_coding', models.TextField(null=True)),
                ('goodsname', models.TextField(null=True)),
                ('unit', models.TextField(null=True)),
                ('package', models.TextField(null=True)),
                ('goodsType', models.TextField(null=True)),
                ('goods_classify_code', models.TextField(null=True)),
                ('supplier', models.TextField(null=True)),
                ('expiration_date', models.TextField(null=True)),
                ('origin', models.TextField(null=True)),
                ('count_type', models.TextField(null=True)),
                ('goodsStatus', models.TextField(null=True)),
                ('cost', models.TextField(null=True)),
                ('retail_price', models.TextField(null=True)),
                ('vip_price', models.TextField(null=True)),
                ('send_price', models.TextField(null=True)),
                ('trade_price', models.TextField(null=True)),
                ('minimum_stock', models.TextField(null=True)),
                ('highest_stock', models.TextField(null=True)),
                ('initial_amount', models.TextField(null=True)),
                ('initial_count', models.TextField(null=True)),
                ('replenishment_logo', models.TextField(null=True)),
                ('replenishment_period', models.TextField(null=True)),
                ('minimum_replenishment_volume', models.TextField(null=True)),
                ('standard', models.TextField(null=True)),
                ('goodsMode', models.TextField(null=True)),
                ('brand', models.TextField(null=True)),
                ('remark', models.TextField(null=True)),
                ('goods_img', models.ImageField(null=True, upload_to='goods_img')),
                ('goods_desc', models.TextField(null=True)),
                ('goods_detail_img1', models.ImageField(null=True, upload_to='goods_detail_img1')),
                ('goods_detail_img2', models.ImageField(null=True, upload_to='goods_detail_img2')),
            ],
            options={
                'db_table': 'vegetable_goods',
            },
        ),
    ]
